// <auto-generated />

using System.Reflection;
using System.Resources;
using Microsoft.EntityFrameworkCore.Diagnostics;
using Microsoft.Extensions.Logging;
using LINQtoGremlin.Core.Diagnostics;

namespace LINQtoGremlin.Core.Properties
{
    public static class GdbStrings
    {
		#region Methods

        private static string GetString(
			string name, 
			params string[] formatterNames)
        {
            var value = _resourceManager
				.GetString(
					name);

            for (var i = 0; i != formatterNames.Length; i++)
            {
                value 
					= value
						.Replace(
							"{" + formatterNames[i] + "}", 
							"{" + i + "}");
            }

            return value;
        }

		#endregion

		#region Fields

        private static readonly ResourceManager _resourceManager
            = new ResourceManager(
				"LINQtoGremlin.Core.Properties.GdbStrings", 
				typeof(GdbStrings)
					.GetTypeInfo().Assembly);

        /// <summary>
        ///     Saved {count} entities to the store.
        /// </summary>
        public static readonly EventDefinition<int> LogChangesSaved
            = new EventDefinition<int>(
                GDbEventId._changesSaved,
                LogLevel.Information,
                LoggerMessage.Define<int>(
                    LogLevel.Information,
                    GDbEventId._changesSaved,
                    _resourceManager
						.GetString(
							"LogChangesSaved")));

        /// <summary>
        ///     Transactions are not supported by the store.
        /// </summary>
        public static readonly EventDefinition LogDatabaseTransactionIgnoredWarning
            = new EventDefinition(
                GDbEventId._databaseTransactionIgnoredWarning,
                LogLevel.Warning,
                LoggerMessage.Define(
                    LogLevel.Warning,
                    GDbEventId._databaseTransactionIgnoredWarning,
                    _resourceManager
						.GetString(
							"LogDatabaseTransactionIgnoredWarning")));

		#endregion
    }
}
